services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  postgres-auth:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth_db
    volumes:
      - postgres-auth-data:/var/lib/postgresql/data

  postgres-query:
    image: postgres:15-alpine
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: query_db
    volumes:
      - postgres-query-data:/var/lib/postgresql/data

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    environment:
      DB_HOST: postgres-auth
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: auth_db
      DB_PORT: 5432
      DB_SSLMODE: disable
      KAFKA_BROKER: kafka:29092
      KAFKA_TOPIC: user-events
      JWT_SECRET: your-secret-key-here
    depends_on:
      - postgres-auth
      - kafka

  query-service:
    build:
      context: ./query-service
      dockerfile: Dockerfile
    ports:
      - "8089:8089"
    environment:
      DB_HOST: postgres-query
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: query_db
      DB_PORT: 5432
      DB_SSLMODE: disable
      KAFKA_BROKER: kafka:29092
      KAFKA_TOPIC: user-events
      KAFKA_GROUP: query-group
    depends_on:
      - postgres-query
      - kafka

volumes:
  postgres-auth-data:
  postgres-query-data:
